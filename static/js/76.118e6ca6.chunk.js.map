{"version":3,"file":"static/js/76.118e6ca6.chunk.js","mappings":"mPACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAAgF,wBAAhF,EAAwH,4B,SCyDxH,MApDA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAeJ,GAFjB,OAEXK,EAFW,OAGjBR,EAAQQ,GAHS,gDAKjBC,QAAQC,MAAM,gCAAiC,KAAMC,SALpC,yBAOjBT,GAAW,GAPM,4EAAH,qDAWlBI,GACD,GAAE,CAACH,KAMF,yBACGF,GACC,sCACGF,GAAwB,IAAhBA,EAAKa,QAGhB,eAAIC,UAAWC,EAAf,SACGf,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,gBAAIN,UAAWC,EAAf,WACE,gBACEM,IACEF,EAAY,wCACyBA,GAfnD,8EAkBYG,IAAKJ,EACLK,MAAM,SAER,eAAIT,UAAWC,EAAf,SAA+BG,KAC/B,cAAGJ,UAAWC,EAAd,SAAkCK,MAXNH,EADtB,OAHZ,4CAsBP,C,8LCtDKO,EAAU,mCACVC,EAAW,sCAEJjB,EAAc,mCAAG,WAAMkB,GAAN,kGAEHC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBC,EAAxB,YAA4C,CACjEE,OAAQ,CACNC,QAASL,KAJa,cAEpBM,EAFoB,OAQlB9B,EAAS8B,EAASrB,KAAlBT,KARkB,kBASnBA,GATmB,sCAW1BU,QAAQC,MAAM,SAAU,KAAMC,SAXJ,8DAAH,sDAkBdmB,EAAiB,mCAAG,WAAML,GAAN,gGAENC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBC,GAAY,CACzDE,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,yBAOtBA,EAASrB,MAPa,sCAS7BC,QAAQC,MAAM,SAAU,KAAMC,SATD,8DAAH,sDAgBjBoB,EAAiB,mCAAG,WAAMN,GAAN,kGAENC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAwBC,EAAxB,YAA4C,CACjEE,OAAQ,CACNC,QAASL,KAJgB,cAEvBM,EAFuB,OAQrBG,EAAYH,EAASrB,KAArBwB,QARqB,kBAStBA,GATsB,sCAW7BvB,QAAQC,MAAM,SAAU,KAAMC,SAXD,8DAAH,sDAmBjBsB,EAAU,mCAAG,WAAMC,GAAN,gGAECR,EAAAA,EAAAA,IAHR,4CAG8B,CAC3CC,OAAQ,CACNC,QAASL,EACTW,MAAAA,KALkB,cAEhBL,EAFgB,yBAQfA,EAASrB,KAAKwB,SARC,sCAUtBvB,QAAQC,MAAM,SAAU,KAAMC,SAVR,8DAAH,sDAmBVwB,EAAW,mCAAG,6GAEAT,EAAAA,EAAAA,IAJR,mDAI8B,CAC3CC,OAAQ,CACNC,QAASL,KAJU,cAEjBM,EAFiB,yBAOhBA,EAASrB,KAAKwB,SAPE,sCASvBvB,QAAQC,MAAM,SAAU,KAAMC,SATP,8DAAH,oD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"nameActor\":\"Cast_nameActor__6kuz0\",\"nameCharacter\":\"Cast_nameCharacter__l+kKv\"};","import { fetchMovieCast } from '../Services/api';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport css from './Cast.module.css';\n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const data = await fetchMovieCast(movieId);\n        setCast(data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : !cast || cast.length === 0 ? (\n        <p>Cast not found.</p>\n      ) : (\n        <ul className={css.list}>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <li className={css.item} key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                    : defaultImg\n                }\n                alt={name}\n                width=\"120\"\n              />\n              <h4 className={css.nameActor}>{name}</h4>\n              <p className={css.nameCharacter}>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '61565724251169988f32e57535b39744';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nexport const fetchMovieCast = async movie_id => {\n  try {\n    const response = await axios.get(`${BASE_URL}${movie_id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const { cast } = response.data;\n    return cast;\n  } catch (error) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\n// 2\n\nexport const fetchMovieDetails = async movie_id => {\n  try {\n    const response = await axios.get(`${BASE_URL}${movie_id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\n// 3\n\nexport const fetchMovieReviews = async movie_id => {\n  try {\n    const response = await axios.get(`${BASE_URL}${movie_id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const { results } = response.data;\n    return results;\n  } catch (error) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\n//   4\n\nconst BASE_URL_2 = 'https://api.themoviedb.org/3/search/movie';\nexport const findMovies = async query => {\n  try {\n    const response = await axios.get(BASE_URL_2, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\n// 5\n\nconst BASE_URL_3 = 'https://api.themoviedb.org/3/trending/movie/week';\n\nexport const fetchTrends = async () => {\n  try {\n    const response = await axios.get(BASE_URL_3, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\n"],"names":["useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","getMovieCast","fetchMovieCast","data","console","error","message","length","className","css","map","id","name","profile_path","character","src","alt","width","API_KEY","BASE_URL","movie_id","axios","params","api_key","response","fetchMovieDetails","fetchMovieReviews","results","findMovies","query","fetchTrends"],"sourceRoot":""}